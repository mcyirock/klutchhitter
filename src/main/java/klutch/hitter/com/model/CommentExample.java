package klutch.hitter.com.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Date;

public class CommentExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	public CommentExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCwriterIsNull() {
			addCriterion("cwriter is null");
			return (Criteria) this;
		}

		public Criteria andCwriterIsNotNull() {
			addCriterion("cwriter is not null");
			return (Criteria) this;
		}

		public Criteria andCwriterEqualTo(String value) {
			addCriterion("cwriter =", value, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCwriterNotEqualTo(String value) {
			addCriterion("cwriter <>", value, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCwriterGreaterThan(String value) {
			addCriterion("cwriter >", value, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCwriterGreaterThanOrEqualTo(String value) {
			addCriterion("cwriter >=", value, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCwriterLessThan(String value) {
			addCriterion("cwriter <", value, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCwriterLessThanOrEqualTo(String value) {
			addCriterion("cwriter <=", value, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCwriterLike(String value) {
			addCriterion("cwriter like", value, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCwriterNotLike(String value) {
			addCriterion("cwriter not like", value, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCwriterIn(List<String> values) {
			addCriterion("cwriter in", values, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCwriterNotIn(List<String> values) {
			addCriterion("cwriter not in", values, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCwriterBetween(String value1, String value2) {
			addCriterion("cwriter between", value1, value2, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCwriterNotBetween(String value1, String value2) {
			addCriterion("cwriter not between", value1, value2, "cwriter");
			return (Criteria) this;
		}

		public Criteria andCmtIsNull() {
			addCriterion("cmt is null");
			return (Criteria) this;
		}

		public Criteria andCmtIsNotNull() {
			addCriterion("cmt is not null");
			return (Criteria) this;
		}

		public Criteria andCmtEqualTo(String value) {
			addCriterion("cmt =", value, "cmt");
			return (Criteria) this;
		}

		public Criteria andCmtNotEqualTo(String value) {
			addCriterion("cmt <>", value, "cmt");
			return (Criteria) this;
		}

		public Criteria andCmtGreaterThan(String value) {
			addCriterion("cmt >", value, "cmt");
			return (Criteria) this;
		}

		public Criteria andCmtGreaterThanOrEqualTo(String value) {
			addCriterion("cmt >=", value, "cmt");
			return (Criteria) this;
		}

		public Criteria andCmtLessThan(String value) {
			addCriterion("cmt <", value, "cmt");
			return (Criteria) this;
		}

		public Criteria andCmtLessThanOrEqualTo(String value) {
			addCriterion("cmt <=", value, "cmt");
			return (Criteria) this;
		}

		public Criteria andCmtLike(String value) {
			addCriterion("cmt like", value, "cmt");
			return (Criteria) this;
		}

		public Criteria andCmtNotLike(String value) {
			addCriterion("cmt not like", value, "cmt");
			return (Criteria) this;
		}

		public Criteria andCmtIn(List<String> values) {
			addCriterion("cmt in", values, "cmt");
			return (Criteria) this;
		}

		public Criteria andCmtNotIn(List<String> values) {
			addCriterion("cmt not in", values, "cmt");
			return (Criteria) this;
		}

		public Criteria andCmtBetween(String value1, String value2) {
			addCriterion("cmt between", value1, value2, "cmt");
			return (Criteria) this;
		}

		public Criteria andCmtNotBetween(String value1, String value2) {
			addCriterion("cmt not between", value1, value2, "cmt");
			return (Criteria) this;
		}

		public Criteria andNoIsNull() {
			addCriterion("no is null");
			return (Criteria) this;
		}

		public Criteria andNoIsNotNull() {
			addCriterion("no is not null");
			return (Criteria) this;
		}

		public Criteria andNoEqualTo(Integer value) {
			addCriterion("no =", value, "no");
			return (Criteria) this;
		}

		public Criteria andNoNotEqualTo(Integer value) {
			addCriterion("no <>", value, "no");
			return (Criteria) this;
		}

		public Criteria andNoGreaterThan(Integer value) {
			addCriterion("no >", value, "no");
			return (Criteria) this;
		}

		public Criteria andNoGreaterThanOrEqualTo(Integer value) {
			addCriterion("no >=", value, "no");
			return (Criteria) this;
		}

		public Criteria andNoLessThan(Integer value) {
			addCriterion("no <", value, "no");
			return (Criteria) this;
		}

		public Criteria andNoLessThanOrEqualTo(Integer value) {
			addCriterion("no <=", value, "no");
			return (Criteria) this;
		}

		public Criteria andNoIn(List<Integer> values) {
			addCriterion("no in", values, "no");
			return (Criteria) this;
		}

		public Criteria andNoNotIn(List<Integer> values) {
			addCriterion("no not in", values, "no");
			return (Criteria) this;
		}

		public Criteria andNoBetween(Integer value1, Integer value2) {
			addCriterion("no between", value1, value2, "no");
			return (Criteria) this;
		}

		public Criteria andNoNotBetween(Integer value1, Integer value2) {
			addCriterion("no not between", value1, value2, "no");
			return (Criteria) this;
		}

		public Criteria andCnoIsNull() {
			addCriterion("cno is null");
			return (Criteria) this;
		}

		public Criteria andCnoIsNotNull() {
			addCriterion("cno is not null");
			return (Criteria) this;
		}

		public Criteria andCnoEqualTo(Integer value) {
			addCriterion("cno =", value, "cno");
			return (Criteria) this;
		}

		public Criteria andCnoNotEqualTo(Integer value) {
			addCriterion("cno <>", value, "cno");
			return (Criteria) this;
		}

		public Criteria andCnoGreaterThan(Integer value) {
			addCriterion("cno >", value, "cno");
			return (Criteria) this;
		}

		public Criteria andCnoGreaterThanOrEqualTo(Integer value) {
			addCriterion("cno >=", value, "cno");
			return (Criteria) this;
		}

		public Criteria andCnoLessThan(Integer value) {
			addCriterion("cno <", value, "cno");
			return (Criteria) this;
		}

		public Criteria andCnoLessThanOrEqualTo(Integer value) {
			addCriterion("cno <=", value, "cno");
			return (Criteria) this;
		}

		public Criteria andCnoIn(List<Integer> values) {
			addCriterion("cno in", values, "cno");
			return (Criteria) this;
		}

		public Criteria andCnoNotIn(List<Integer> values) {
			addCriterion("cno not in", values, "cno");
			return (Criteria) this;
		}

		public Criteria andCnoBetween(Integer value1, Integer value2) {
			addCriterion("cno between", value1, value2, "cno");
			return (Criteria) this;
		}

		public Criteria andCnoNotBetween(Integer value1, Integer value2) {
			addCriterion("cno not between", value1, value2, "cno");
			return (Criteria) this;
		}

		public Criteria andCmtdateIsNull() {
			addCriterion("cmtdate is null");
			return (Criteria) this;
		}

		public Criteria andCmtdateIsNotNull() {
			addCriterion("cmtdate is not null");
			return (Criteria) this;
		}

		public Criteria andCmtdateEqualTo(Date value) {
			addCriterion("cmtdate =", value, "cmtdate");
			return (Criteria) this;
		}

		public Criteria andCmtdateNotEqualTo(Date value) {
			addCriterion("cmtdate <>", value, "cmtdate");
			return (Criteria) this;
		}

		public Criteria andCmtdateGreaterThan(Date value) {
			addCriterion("cmtdate >", value, "cmtdate");
			return (Criteria) this;
		}

		public Criteria andCmtdateGreaterThanOrEqualTo(Date value) {
			addCriterion("cmtdate >=", value, "cmtdate");
			return (Criteria) this;
		}

		public Criteria andCmtdateLessThan(Date value) {
			addCriterion("cmtdate <", value, "cmtdate");
			return (Criteria) this;
		}

		public Criteria andCmtdateLessThanOrEqualTo(Date value) {
			addCriterion("cmtdate <=", value, "cmtdate");
			return (Criteria) this;
		}

		public Criteria andCmtdateIn(List<Date> values) {
			addCriterion("cmtdate in", values, "cmtdate");
			return (Criteria) this;
		}

		public Criteria andCmtdateNotIn(List<Date> values) {
			addCriterion("cmtdate not in", values, "cmtdate");
			return (Criteria) this;
		}

		public Criteria andCmtdateBetween(Date value1, Date value2) {
			addCriterion("cmtdate between", value1, value2, "cmtdate");
			return (Criteria) this;
		}

		public Criteria andCmtdateNotBetween(Date value1, Date value2) {
			addCriterion("cmtdate not between", value1, value2, "cmtdate");
			return (Criteria) this;
		}

		public Criteria andCmtipIsNull() {
			addCriterion("cmtip is null");
			return (Criteria) this;
		}

		public Criteria andCmtipIsNotNull() {
			addCriterion("cmtip is not null");
			return (Criteria) this;
		}

		public Criteria andCmtipEqualTo(String value) {
			addCriterion("cmtip =", value, "cmtip");
			return (Criteria) this;
		}

		public Criteria andCmtipNotEqualTo(String value) {
			addCriterion("cmtip <>", value, "cmtip");
			return (Criteria) this;
		}

		public Criteria andCmtipGreaterThan(String value) {
			addCriterion("cmtip >", value, "cmtip");
			return (Criteria) this;
		}

		public Criteria andCmtipGreaterThanOrEqualTo(String value) {
			addCriterion("cmtip >=", value, "cmtip");
			return (Criteria) this;
		}

		public Criteria andCmtipLessThan(String value) {
			addCriterion("cmtip <", value, "cmtip");
			return (Criteria) this;
		}

		public Criteria andCmtipLessThanOrEqualTo(String value) {
			addCriterion("cmtip <=", value, "cmtip");
			return (Criteria) this;
		}

		public Criteria andCmtipLike(String value) {
			addCriterion("cmtip like", value, "cmtip");
			return (Criteria) this;
		}

		public Criteria andCmtipNotLike(String value) {
			addCriterion("cmtip not like", value, "cmtip");
			return (Criteria) this;
		}

		public Criteria andCmtipIn(List<String> values) {
			addCriterion("cmtip in", values, "cmtip");
			return (Criteria) this;
		}

		public Criteria andCmtipNotIn(List<String> values) {
			addCriterion("cmtip not in", values, "cmtip");
			return (Criteria) this;
		}

		public Criteria andCmtipBetween(String value1, String value2) {
			addCriterion("cmtip between", value1, value2, "cmtip");
			return (Criteria) this;
		}

		public Criteria andCmtipNotBetween(String value1, String value2) {
			addCriterion("cmtip not between", value1, value2, "cmtip");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table comment
	 * @mbggenerated  Mon Jun 02 16:54:14 KST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbggenerated do_not_delete_during_merge Fri May 30 16:08:55 KST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}